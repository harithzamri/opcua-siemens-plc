"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNullOrUndefined = exports.normalize_require_file = exports.check_flag = exports.set_flag = void 0;
/**
 * @module node-opcua-utils
 */
// tslint:disable:no-bitwise
const node_opcua_assert_1 = require("node-opcua-assert");
const path = require("path");
/**
 * set a flag
 * @method set_flag
 */
function set_flag(value, mask) {
    if (mask.value) {
        mask = mask.value;
    }
    node_opcua_assert_1.assert(!mask.hasOwnProperty("value"));
    node_opcua_assert_1.assert(mask !== undefined);
    return value | mask;
}
exports.set_flag = set_flag;
/**
 * check if a set of bits are set in the values
 * @method check_flag
 */
function check_flag(value, mask) {
    if (mask.value) {
        mask = mask.value;
    }
    node_opcua_assert_1.assert(!mask.hasOwnProperty("value"));
    return ((value & mask) === mask);
}
exports.check_flag = check_flag;
// ---------------------------------------------------------------------------------------------------------------------
/**
 * @method normalize_require_file
 * @param baseFolder
 * @param fullPathToFile
 *
 *
 * @example:
 *    normalize_require_file("/home/bob/folder1/","/home/bob/folder1/folder2/toto.js").should.eql("./folder2/toto");
 */
function normalize_require_file(baseFolder, fullPathToFile) {
    let localFile = path.relative(baseFolder, fullPathToFile).replace(/\\/g, "/");
    // append ./ if necessary
    if (localFile.substr(0, 1) !== ".") {
        localFile = "./" + localFile;
    }
    // remove extension
    localFile = localFile.substr(0, localFile.length - path.extname(localFile).length);
    return localFile;
}
exports.normalize_require_file = normalize_require_file;
function isNullOrUndefined(value) {
    return value === undefined || value === null;
}
exports.isNullOrUndefined = isNullOrUndefined;
var buffer_ellipsis_1 = require("./buffer_ellipsis");
Object.defineProperty(exports, "buffer_ellipsis", { enumerable: true, get: function () { return buffer_ellipsis_1.buffer_ellipsis; } });
var string_utils_1 = require("./string_utils");
Object.defineProperty(exports, "capitalizeFirstLetter", { enumerable: true, get: function () { return string_utils_1.capitalizeFirstLetter; } });
Object.defineProperty(exports, "lowerFirstLetter", { enumerable: true, get: function () { return string_utils_1.lowerFirstLetter; } });
var object_classname_1 = require("./object_classname");
Object.defineProperty(exports, "getObjectClassName", { enumerable: true, get: function () { return object_classname_1.getObjectClassName; } });
var get_clock_tick_1 = require("./get_clock_tick");
Object.defineProperty(exports, "get_clock_tick", { enumerable: true, get: function () { return get_clock_tick_1.get_clock_tick; } });
var compare_buffers_1 = require("./compare_buffers");
Object.defineProperty(exports, "compare_buffers", { enumerable: true, get: function () { return compare_buffers_1.compare_buffers; } });
var construct_filename_1 = require("./construct_filename");
Object.defineProperty(exports, "constructFilename", { enumerable: true, get: function () { return construct_filename_1.constructFilename; } });
var get_function_parameters_name_1 = require("./get_function_parameters_name");
Object.defineProperty(exports, "getFunctionParameterNames", { enumerable: true, get: function () { return get_function_parameters_name_1.getFunctionParameterNames; } });
__exportStar(require("./watchdog"), exports);
var linefile_1 = require("./linefile");
Object.defineProperty(exports, "LineFile", { enumerable: true, get: function () { return linefile_1.LineFile; } });
var set_deprecated_1 = require("./set_deprecated");
Object.defineProperty(exports, "setDeprecated", { enumerable: true, get: function () { return set_deprecated_1.setDeprecated; } });
var replace_buffer_with_hex_dump_1 = require("./replace_buffer_with_hex_dump");
Object.defineProperty(exports, "replaceBufferWithHexDump", { enumerable: true, get: function () { return replace_buffer_with_hex_dump_1.replaceBufferWithHexDump; } });
__exportStar(require("./timestamp"), exports);
//# sourceMappingURL=index.js.map